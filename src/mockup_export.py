# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'test.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import os
from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(400, 95)
        self.gridLayout = QtWidgets.QGridLayout(Form)
        self.gridLayout.setObjectName("gridLayout")
        self.pushButton = QtWidgets.QPushButton(Form)
        self.pushButton.setObjectName("pushButton")
        self.gridLayout.addWidget(self.pushButton, 0, 0, 1, 1)
        self.pushButton.clicked.connect(self.export)
        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def export(self):
        defaultName = os.path.join(os.path.expanduser('~'), 'test.ods')
        fd = SaveThenOpenFileDialog(None, 'Exporter...', defaultName, 'Feuille de calcul OpenDocument (*.ods)', proposeOuverture=True)
        if fd.exec_() == QtWidgets.QDialog.Accepted:
            print(fd.selectedFiles()[0])
            print(fd.checkbox.isChecked())
        
    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Export Dialog"))
        self.pushButton.setText(_translate("Form", "Export"))


class SaveThenOpenFileDialog(QtWidgets.QFileDialog):
    def __init__(self, *args, proposeOuverture=True):
        super().__init__(*args)
        self.setOption(QtWidgets.QFileDialog.DontUseNativeDialog)
        self.setAcceptMode(QtWidgets.QFileDialog.AcceptSave)
        self.setWindowFlags(self.windowFlags() & ~QtCore.Qt.Dialog)
        self.checkbox = QtWidgets.QCheckBox(self)
        self.checkbox.setStyleSheet("color: rgb(255, 0, 0);")
        self.checkbox.setText("Ouvrir le fichier apr√®s enregistrement")
        self.layout().addWidget(self.checkbox)
        if not proposeOuverture :
            self.checkbox.setVisible(False)




if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Ui_Form()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec_())
